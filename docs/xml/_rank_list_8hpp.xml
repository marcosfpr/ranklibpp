<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_rank_list_8hpp" kind="file" language="C++">
    <compoundname>RankList.hpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">list</includes>
    <includes local="no">memory</includes>
    <includedby refid="_ranker_8hpp" local="yes">/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/Ranker.hpp</includedby>
    <includedby refid="ltr_8hpp" local="yes">/home/marcos/Projetos/ltrpp/ltr/lib/api/ltr.hpp</includedby>
    <includedby refid="_ranker_8cpp" local="yes">/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/Ranker.cpp</includedby>
    <includedby refid="_rank_list_8cpp" local="yes">/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/RankList.cpp</includedby>
    <includedby refid="_m_a_p_scorer_8cpp" local="yes">/home/marcos/Projetos/ltrpp/ltr/lib/impl/metric/MAPScorer.cpp</includedby>
    <includedby refid="_metric_scorer_8cpp" local="yes">/home/marcos/Projetos/ltrpp/ltr/lib/impl/metric/MetricScorer.cpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>list</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/RankList.hpp</label>
        <link refid="_rank_list_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/Ranker.cpp</label>
        <link refid="_ranker_8cpp"/>
      </node>
      <node id="1">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/RankList.hpp</label>
        <link refid="_rank_list_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/impl/metric/MAPScorer.cpp</label>
        <link refid="_m_a_p_scorer_8cpp"/>
      </node>
      <node id="4">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/api/ltr.hpp</label>
        <link refid="ltr_8hpp_source"/>
      </node>
      <node id="6">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/RankList.cpp</label>
        <link refid="_rank_list_8cpp"/>
      </node>
      <node id="8">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/impl/metric/MetricScorer.cpp</label>
        <link refid="_metric_scorer_8cpp"/>
      </node>
      <node id="2">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/Ranker.hpp</label>
        <link refid="_ranker_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/boosting/AdaRank.hpp</label>
        <link refid="_ada_rank_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classltr_1_1_rank_list" prot="public">ltr::RankList</innerclass>
    <innernamespace refid="namespaceltr">ltr</innernamespace>
    <briefdescription>
<para>Definition of RankLists. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>your name (<ulink url="mailto:you@domain.com">you@domain.com</ulink>) </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2021-02-07</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2021 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#ifndef<sp/>RANK_LIST_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RANK_LIST_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::shared_ptr;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::unique_ptr;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::vector;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::list;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">ltr{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DataPoint;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RankListImpl;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>shared_ptr&lt;const<sp/>DataPoint&gt;<sp/>ReadableDataPoint;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>vector&lt;ReadableDataPoint&gt;<sp/>Sample;<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classltr_1_1_rank_list" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list_1a8ba9c6076cb67897d1cb0ff66336e4f3" kindref="member">RankList</ref>(Sample<sp/>data_points);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list_1a8ba9c6076cb67897d1cb0ff66336e4f3" kindref="member">RankList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref>&amp;<sp/>rl,<sp/>vector&lt;int&gt;<sp/>idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset=0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list_1a8ba9c6076cb67897d1cb0ff66336e4f3" kindref="member">RankList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref>&amp;<sp/>rl);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list_1a8ba9c6076cb67897d1cb0ff66336e4f3" kindref="member">RankList</ref>(<ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref>&amp;&amp;<sp/>rl);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref>&amp;<sp/><ref refid="classltr_1_1_rank_list_1a4a1001d8064f7504affa708f0b3db06b" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref>&amp;<sp/>rl);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref>&amp;<sp/><ref refid="classltr_1_1_rank_list_1a4a1001d8064f7504affa708f0b3db06b" kindref="member">operator=</ref>(<ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref>&amp;&amp;<sp/>rl);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list_1ad2ed9420312f06389716efe2e071dd94" kindref="member">~RankList</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classltr_1_1_rank_list_1a87a2983f9be7dfb492c531eb2318ccf0" kindref="member">toString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classltr_1_1_rank_list_1ab032e0dd950aacc8086a465e173a8a80" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadableDataPoint<sp/><ref refid="classltr_1_1_rank_list_1a51b857a46d0b1afa9c87724ba26ec384" kindref="member">get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classltr_1_1_data_point" kindref="compound">DataPoint</ref>&amp;<sp/><ref refid="classltr_1_1_rank_list_1adc071b87f0a21857f38d167fc6898a03" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classltr_1_1_rank_list_1a877292f658419351084f230eab01ada4" kindref="member">set</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/>ReadableDataPoint<sp/>dp);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref><sp/><ref refid="classltr_1_1_rank_list_1a0e44c3c26e00dbb773234cd97514bd67" kindref="member">getPartialRanking</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fid)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list" kindref="compound">RankList</ref><sp/><ref refid="classltr_1_1_rank_list_1a6e73baf96dbe5e21ce57458ea2a9fbb5" kindref="member">getRanking</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classltr_1_1_rank_list_1a93e6b593b766811a5cd77d9ac1b13c1f" kindref="member">permute</ref>(vector&lt;int&gt;&amp;<sp/>idx);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classltr_1_1_rank_list_impl" kindref="compound">RankListImpl</ref>*<sp/>p_impl;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/RankList.hpp"/>
  </compounddef>
</doxygen>
