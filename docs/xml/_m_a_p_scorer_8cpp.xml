<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_m_a_p_scorer_8cpp" kind="file" language="C++">
    <compoundname>MAPScorer.cpp</compoundname>
    <includes refid="_m_a_p_scorer_8hpp" local="yes">../../api/metric/MAPScorer.hpp</includes>
    <includes refid="_rank_list_8hpp" local="yes">../../api/learning/RankList.hpp</includes>
    <includes refid="_data_point_8hpp" local="yes">../../api/learning/DataPoint.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>list</label>
      </node>
      <node id="6">
        <label>../../api/learning/RankList.hpp</label>
        <link refid="_rank_list_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="3">
        <label>MetricScorer.hpp</label>
        <link refid="_metric_scorer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>../../api/learning/DataPoint.hpp</label>
        <link refid="_data_point_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>/home/marcos/Projetos/ranklibcpp/ranklib/lib/impl/metric/MAPScorer.cpp</label>
        <link refid="_m_a_p_scorer_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../../api/metric/MAPScorer.hpp</label>
        <link refid="_m_a_p_scorer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Implementation of MAPScorer. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marcos Pontes </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2021-02-28</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2021 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&quot;../../api/metric/MAPScorer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../api/learning/RankList.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../api/learning/DataPoint.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ranklib;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classranklib_1_1_m_a_p_scorer_1aa5a1f733d769e0b0b615a12e6e8f4c51" kindref="member">MAPScorer::MAPScorer</ref>():<ref refid="classranklib_1_1_metric_scorer" kindref="compound">MetricScorer</ref>(){}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><ref refid="classranklib_1_1_m_a_p_scorer_1aa5a1f733d769e0b0b615a12e6e8f4c51" kindref="member">MAPScorer::MAPScorer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classranklib_1_1_m_a_p_scorer" kindref="compound">MAPScorer</ref>&amp;<sp/>ms):<ref refid="classranklib_1_1_metric_scorer" kindref="compound">MetricScorer</ref>(ms){}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><ref refid="classranklib_1_1_m_a_p_scorer" kindref="compound">MAPScorer</ref>&amp;<sp/><ref refid="classranklib_1_1_m_a_p_scorer_1a79321cabcd75fa6575156beea8b1c548" kindref="member">MAPScorer::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classranklib_1_1_m_a_p_scorer" kindref="compound">MAPScorer</ref>&amp;<sp/>ms){</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classranklib_1_1_metric_scorer_1a1b3757c0012820a8a842e4d54f422c45" kindref="member">MetricScorer::operator=</ref>(ms);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classranklib_1_1_m_a_p_scorer_1a511abfa657189ddc1a00b382a7bc23d9" kindref="member">MAPScorer::score</ref>(<ref refid="classranklib_1_1_rank_list" kindref="compound">RankList</ref><sp/>rl){</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>averagePrecision<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>rl.<ref refid="classranklib_1_1_rank_list_1ab032e0dd950aacc8086a465e173a8a80" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(rl.<ref refid="classranklib_1_1_rank_list_1a4b738c5b7a18492abf2cec423d348178" kindref="member">get</ref>(i)-&gt;getLabel()<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>averagePrecision<sp/>+=<sp/>((double)count/(i+1));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count<sp/>&gt;<sp/>0.0<sp/>?<sp/>averagePrecision<sp/>/<sp/>count<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classranklib_1_1_m_a_p_scorer_1a511abfa657189ddc1a00b382a7bc23d9" kindref="member">MAPScorer::score</ref>(list&lt;RankList&gt;<sp/>rls){</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classranklib_1_1_metric_scorer_1a46a4b327848c8d4e41d3437999f4f8e0" kindref="member">MetricScorer::score</ref>(std::move(rls));</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/marcos/Projetos/ranklibcpp/ranklib/lib/impl/metric/MAPScorer.cpp"/>
  </compounddef>
</doxygen>
