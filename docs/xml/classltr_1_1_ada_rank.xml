<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classltr_1_1_ada_rank" kind="class" language="C++" prot="public">
    <compoundname>ltr::AdaRank</compoundname>
    <basecompoundref refid="classltr_1_1_ranker" prot="public" virt="non-virtual">ltr::Ranker</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a7e9cfb55213bd5fc68bb6ce1996f3834" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int ltr::AdaRank::iter</definition>
        <argsstring></argsstring>
        <name>iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="203" column="13" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a8d4c4cec43f4275bf65adcfdb98b1dac" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int ltr::AdaRank::max_consecutive_selections</definition>
        <argsstring></argsstring>
        <name>max_consecutive_selections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="203" column="18" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a611119a99cd07bcdf031ff06ee4bf8fb" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int ltr::AdaRank::consecutive_selections</definition>
        <argsstring></argsstring>
        <name>consecutive_selections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="203" column="45" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a065469e66892d8c46b4ec43db3546eb5" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int ltr::AdaRank::previous_feature</definition>
        <argsstring></argsstring>
        <name>previous_feature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="203" column="68" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1ae26827ed459254fcce4456803875033f" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double ltr::AdaRank::tolerance</definition>
        <argsstring></argsstring>
        <name>tolerance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="205" column="16" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a2396d6c5e8256aa98e064c1f20052644" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double ltr::AdaRank::previous_training_score</definition>
        <argsstring></argsstring>
        <name>previous_training_score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="205" column="26" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a4dab54fcac9818f3577ff01476c0cd2c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double ltr::AdaRank::previous_validation_score</definition>
        <argsstring></argsstring>
        <name>previous_validation_score</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="205" column="50" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1aea4dc558a51d4370582b18e65541b193" prot="protected" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; ltr::AdaRank::sample_weights</definition>
        <argsstring></argsstring>
        <name>sample_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="207" column="16" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a37eb9c19726847206fb787e6cb366874" prot="protected" static="no" mutable="no">
        <type>list&lt; double &gt;</type>
        <definition>list&lt;double&gt; ltr::AdaRank::ranker_weights</definition>
        <argsstring></argsstring>
        <name>ranker_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="209" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a30e9608e41ea7dd7b5afaf47b9693601" prot="protected" static="no" mutable="no">
        <type>list&lt; double &gt;</type>
        <definition>list&lt;double&gt; ltr::AdaRank::best_weights</definition>
        <argsstring></argsstring>
        <name>best_weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="209" column="29" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a6103b16b878f8156778d599b30540658" prot="protected" static="no" mutable="no">
        <type>list&lt; <ref refid="classltr_1_1_weak_ranker" kindref="compound">WeakRanker</ref> &gt;</type>
        <definition>list&lt;WeakRanker&gt; ltr::AdaRank::rankers</definition>
        <argsstring></argsstring>
        <name>rankers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="211" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1a86c20ed8f4f0ac9850cd8fc1695732b4" prot="protected" static="no" mutable="no">
        <type>list&lt; <ref refid="classltr_1_1_weak_ranker" kindref="compound">WeakRanker</ref> &gt;</type>
        <definition>list&lt;WeakRanker&gt; ltr::AdaRank::best_rankers</definition>
        <argsstring></argsstring>
        <name>best_rankers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="211" column="22" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classltr_1_1_ada_rank_1ab448c368def2d5d07d981a16a56c9bb6" prot="protected" static="no" mutable="no">
        <type>unordered_set&lt; int &gt;</type>
        <definition>unordered_set&lt;int&gt; ltr::AdaRank::used_features</definition>
        <argsstring></argsstring>
        <name>used_features</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="213" column="23" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classltr_1_1_ada_rank_1ab287d566afa1c49ea943c78f9d4a4016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AdaRank::AdaRank</definition>
        <argsstring>(DataSet dataset, unique_ptr&lt; MetricScorer &gt; scorer, int iter=50, double tolerance=0.002, int maxConsecutive=5, vector&lt; int &gt; features={}, DataSet validationSet={})</argsstring>
        <name>AdaRank</name>
        <param>
          <type>DataSet</type>
          <declname>dataset</declname>
        </param>
        <param>
          <type>unique_ptr&lt; <ref refid="classltr_1_1_metric_scorer" kindref="compound">MetricScorer</ref> &gt;</type>
          <declname>scorer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>iter</declname>
          <defval>50</defval>
        </param>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
          <defval>0.002</defval>
        </param>
        <param>
          <type>int</type>
          <declname>maxConsecutive</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>vector&lt; int &gt;</type>
          <declname>features</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>DataSet</type>
          <declname>validationSet</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a new <ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref> object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dataset</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scorer</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxConsecutive</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>features</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validationSet</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="87" column="9" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="55" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a376f76b6b374de8b674fe982172d3d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AdaRank::~AdaRank</definition>
        <argsstring>()</argsstring>
        <name>~AdaRank</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="90" column="9" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1aacac7068a5546dd281d872f6bcd6aa62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdaRank::fit</definition>
        <argsstring>(bool verbose)</argsstring>
        <name>fit</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
<para>Learn to rank based on <ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>verbose</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates to print steps </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="96" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="225" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1addc477120ac720e3c25b0eb9d3618fb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double AdaRank::predict</definition>
        <argsstring>(ReadableDataPoint dp) override</argsstring>
        <name>predict</name>
        <reimplements refid="classltr_1_1_ranker_1a7a37948dc9fa6641b3952b22944fffce">predict</reimplements>
        <param>
          <type>ReadableDataPoint</type>
          <declname>dp</declname>
        </param>
        <briefdescription>
<para><ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref> evaluation of a single datapoint object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dp</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="104" column="16" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="252" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a5dff0be5e4505ac0ac815ba698b39e32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdaRank::setIter</definition>
        <argsstring>(int iter)</argsstring>
        <name>setIter</name>
        <param>
          <type>int</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Set the Iter object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iter</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="111" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1ab8c0285d8b8b43c1749be4d7504bc572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdaRank::setTolerance</definition>
        <argsstring>(double tolerance)</argsstring>
        <name>setTolerance</name>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
<para>Set the Tolerance object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tolerance</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="118" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a64f9d600cc1a9efe69e6f78a7ba17306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdaRank::setConsecutiveSelections</definition>
        <argsstring>(int consecutiveSelections)</argsstring>
        <name>setConsecutiveSelections</name>
        <param>
          <type>int</type>
          <declname>consecutiveSelections</declname>
        </param>
        <briefdescription>
<para>Set the Consecutive Selections object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>consecutiveSelections</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="125" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1abf8c0dad49de3ddeebcb6686384b9e0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AdaRank::getIter</definition>
        <argsstring>() const</argsstring>
        <name>getIter</name>
        <briefdescription>
<para>Get the number of iterations used in <ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="131" column="13" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a62d51d15bd50824171d84d19660fcc4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AdaRank::getConsecutiveSelections</definition>
        <argsstring>() const</argsstring>
        <name>getConsecutiveSelections</name>
        <briefdescription>
<para>Get the number of consecutive selections of ranker in <ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="137" column="13" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="334" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a049c9e0e051a19332dc0cdf2e33e9f59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double AdaRank::getTolerance</definition>
        <argsstring>() const</argsstring>
        <name>getTolerance</name>
        <briefdescription>
<para>Get the tolerance used in <ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="143" column="16" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="338" bodyend="340"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classltr_1_1_ada_rank_1aad97b40a99fa1c70a8bffa66fa9a11fe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AdaRank::saveJSON</definition>
        <argsstring>(std::ofstream &amp;file) override</argsstring>
        <name>saveJSON</name>
        <reimplements refid="classltr_1_1_ranker_1a9eee499b16c0c26b9d761dd753a791ff">saveJSON</reimplements>
        <param>
          <type>std::ofstream &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Save json in file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="151" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="265" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a6f60500f9b913eaf6b5ef50d41fdc9db" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void AdaRank::loadJSON</definition>
        <argsstring>(std::ifstream &amp;file) override</argsstring>
        <name>loadJSON</name>
        <reimplements refid="classltr_1_1_ranker_1a3cd3b62ffd770b5074779de01632d3fc">loadJSON</reimplements>
        <param>
          <type>std::ifstream &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load json from file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="157" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="303" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a770b7bad96e6e7423ee0755b3d85d89c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdaRank::learn</definition>
        <argsstring>(int start)</argsstring>
        <name>learn</name>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
<para>Learn the data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>iteration </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="164" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="129" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a958b9eaa0d4031dc1b8b3d51d2e1a4a9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classltr_1_1_weak_ranker" kindref="compound">WeakRanker</ref></type>
        <definition>WeakRanker AdaRank::selectWeakRanker</definition>
        <argsstring>()</argsstring>
        <name>selectWeakRanker</name>
        <briefdescription>
<para>Select method of boosting technique. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classltr_1_1_weak_ranker" kindref="compound">WeakRanker</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="171" column="20" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="106" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a5823949cfd30d5b4fbbed0d506203faa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double AdaRank::evaluateWeakRanker</definition>
        <argsstring>(WeakRanker &amp;wk)</argsstring>
        <name>evaluateWeakRanker</name>
        <param>
          <type><ref refid="classltr_1_1_weak_ranker" kindref="compound">WeakRanker</ref> &amp;</type>
          <declname>wk</declname>
        </param>
        <briefdescription>
<para>Evaluate weak ranker in training samples. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wk</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double score </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="179" column="16" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="96" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a80ce9f75c0d63f2b63d463a459d6dbb7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdaRank::printHeader</definition>
        <argsstring>()</argsstring>
        <name>printHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print header table when starts to fit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="184" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="342" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a6280b97b78e53e073d576249569d1825" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdaRank::printIter</definition>
        <argsstring>(int it, int feature, double train_score, double train_improve, double val_score, double val_improve, string status)</argsstring>
        <name>printIter</name>
        <param>
          <type>int</type>
          <declname>it</declname>
        </param>
        <param>
          <type>int</type>
          <declname>feature</declname>
        </param>
        <param>
          <type>double</type>
          <declname>train_score</declname>
        </param>
        <param>
          <type>double</type>
          <declname>train_improve</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val_score</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val_improve</declname>
        </param>
        <param>
          <type>string</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print each iter step <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>feature</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>train_score</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>train_improve</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val_score</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val_improve</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="196" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="349" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a4eb2aa48c463ac876e2eb60d6990c26c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AdaRank::printResults</definition>
        <argsstring>()</argsstring>
        <name>printResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print <ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref> results after fit </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="201" column="14" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/impl/learning/ensemble/AdaRank.cpp" bodystart="357" bodyend="368"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classltr_1_1_ada_rank_1a7b71a63f3250e7e82422cb5d468a3a58" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ltr::AdaRank::AdaRank</definition>
        <argsstring>(const AdaRank &amp;rk)</argsstring>
        <name>AdaRank</name>
        <param>
          <type>const <ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref> &amp;</type>
          <declname>rk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="217" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classltr_1_1_ada_rank_1ae4f9f50c8b2a8e2cf3edbce9c688d47a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref> &amp;</type>
        <definition>AdaRank&amp; ltr::AdaRank::operator=</definition>
        <argsstring>(const AdaRank &amp;rk)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classltr_1_1_ada_rank" kindref="compound">AdaRank</ref> &amp;</type>
          <declname>rk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="218" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ltr::AdaRank</label>
        <link refid="classltr_1_1_ada_rank"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ltr::Ranker</label>
        <link refid="classltr_1_1_ranker"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ltr::Learner</label>
        <link refid="classltr_1_1_learner"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>list&lt; ltr::WeakRanker &gt;</label>
      </node>
      <node id="1">
        <label>ltr::AdaRank</label>
        <link refid="classltr_1_1_ada_rank"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>best_weights</edgelabel>
          <edgelabel>ranker_weights</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>used_features</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>rankers</edgelabel>
          <edgelabel>best_rankers</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>sample_weights</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>list&lt; double &gt;</label>
      </node>
      <node id="10">
        <label>vector&lt; double &gt;</label>
      </node>
      <node id="8">
        <label>unordered_set&lt; int &gt;</label>
      </node>
      <node id="2">
        <label>ltr::Ranker</label>
        <link refid="classltr_1_1_ranker"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>scorer</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>features</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>validation_samples</edgelabel>
          <edgelabel>training_samples</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>vector&lt; int &gt;</label>
      </node>
      <node id="3">
        <label>ltr::Learner</label>
        <link refid="classltr_1_1_learner"/>
      </node>
      <node id="6">
        <label>list&lt; RankList &gt;</label>
      </node>
      <node id="4">
        <label>unique_ptr&lt; ltr::MetricScorer &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" line="74" column="32" bodyfile="/home/marcos/Projetos/ltrpp/ltr/lib/api/learning/ensemble/AdaRank.hpp" bodystart="74" bodyend="219"/>
    <listofallmembers>
      <member refid="classltr_1_1_ada_rank_1ab287d566afa1c49ea943c78f9d4a4016" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>AdaRank</name></member>
      <member refid="classltr_1_1_ada_rank_1a7b71a63f3250e7e82422cb5d468a3a58" prot="private" virt="non-virtual"><scope>ltr::AdaRank</scope><name>AdaRank</name></member>
      <member refid="classltr_1_1_ada_rank_1a86c20ed8f4f0ac9850cd8fc1695732b4" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>best_rankers</name></member>
      <member refid="classltr_1_1_ada_rank_1a30e9608e41ea7dd7b5afaf47b9693601" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>best_weights</name></member>
      <member refid="classltr_1_1_ada_rank_1a611119a99cd07bcdf031ff06ee4bf8fb" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>consecutive_selections</name></member>
      <member refid="classltr_1_1_ada_rank_1a5823949cfd30d5b4fbbed0d506203faa" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>evaluateWeakRanker</name></member>
      <member refid="classltr_1_1_ranker_1a017be4905d31b7fcf3e070711e439b45" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>extractFeatures</name></member>
      <member refid="classltr_1_1_ranker_1aacddf21fc1ab2c2b9c71498dfba1351b" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>features</name></member>
      <member refid="classltr_1_1_ada_rank_1aacac7068a5546dd281d872f6bcd6aa62" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>fit</name></member>
      <member refid="classltr_1_1_ranker_1ab613fb21ed03dbe10fcabb77b29f89d8" prot="public" virt="virtual" ambiguityscope="ltr::Ranker::"><scope>ltr::AdaRank</scope><name>fit</name></member>
      <member refid="classltr_1_1_ada_rank_1a62d51d15bd50824171d84d19660fcc4a" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>getConsecutiveSelections</name></member>
      <member refid="classltr_1_1_ranker_1a584b627bf90240d0004e2d7cd09294c1" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>getFeatures</name></member>
      <member refid="classltr_1_1_ada_rank_1abf8c0dad49de3ddeebcb6686384b9e0c" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>getIter</name></member>
      <member refid="classltr_1_1_ada_rank_1a049c9e0e051a19332dc0cdf2e33e9f59" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>getTolerance</name></member>
      <member refid="classltr_1_1_ranker_1ae5e97bcb0d9c8240eb79b7f1b6dee67b" prot="public" virt="virtual"><scope>ltr::AdaRank</scope><name>getTrainingScore</name></member>
      <member refid="classltr_1_1_ranker_1aa91b80e2d2964e052168d92c6428a234" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>getValidationScore</name></member>
      <member refid="classltr_1_1_ada_rank_1a7e9cfb55213bd5fc68bb6ce1996f3834" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>iter</name></member>
      <member refid="classltr_1_1_ada_rank_1a770b7bad96e6e7423ee0755b3d85d89c" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>learn</name></member>
      <member refid="classltr_1_1_ranker_1a3061f589c024bd3d7c6cd7ea8b663c1a" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>load</name></member>
      <member refid="classltr_1_1_ada_rank_1a6f60500f9b913eaf6b5ef50d41fdc9db" prot="protected" virt="virtual"><scope>ltr::AdaRank</scope><name>loadJSON</name></member>
      <member refid="classltr_1_1_ada_rank_1a8d4c4cec43f4275bf65adcfdb98b1dac" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>max_consecutive_selections</name></member>
      <member refid="classltr_1_1_ada_rank_1ae4f9f50c8b2a8e2cf3edbce9c688d47a" prot="private" virt="non-virtual"><scope>ltr::AdaRank</scope><name>operator=</name></member>
      <member refid="classltr_1_1_ada_rank_1addc477120ac720e3c25b0eb9d3618fb8" prot="public" virt="virtual"><scope>ltr::AdaRank</scope><name>predict</name></member>
      <member refid="classltr_1_1_ada_rank_1a065469e66892d8c46b4ec43db3546eb5" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>previous_feature</name></member>
      <member refid="classltr_1_1_ada_rank_1a2396d6c5e8256aa98e064c1f20052644" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>previous_training_score</name></member>
      <member refid="classltr_1_1_ada_rank_1a4dab54fcac9818f3577ff01476c0cd2c" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>previous_validation_score</name></member>
      <member refid="classltr_1_1_ada_rank_1a80ce9f75c0d63f2b63d463a459d6dbb7" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>printHeader</name></member>
      <member refid="classltr_1_1_ada_rank_1a6280b97b78e53e073d576249569d1825" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>printIter</name></member>
      <member refid="classltr_1_1_ada_rank_1a4eb2aa48c463ac876e2eb60d6990c26c" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>printResults</name></member>
      <member refid="classltr_1_1_learner_1a8606e514b58a7e0caf51cfff1e247e44" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>rank</name></member>
      <member refid="classltr_1_1_learner_1a5f32be74efa7fd80679d688def13c58e" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>rank</name></member>
      <member refid="classltr_1_1_ranker_1ab8288ded6770388b10235f002a08dddc" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>Ranker</name></member>
      <member refid="classltr_1_1_ada_rank_1a37eb9c19726847206fb787e6cb366874" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>ranker_weights</name></member>
      <member refid="classltr_1_1_ada_rank_1a6103b16b878f8156778d599b30540658" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>rankers</name></member>
      <member refid="classltr_1_1_ada_rank_1aea4dc558a51d4370582b18e65541b193" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>sample_weights</name></member>
      <member refid="classltr_1_1_ranker_1a74f4aeca4387a60a1e8608c7efa71c5a" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>save</name></member>
      <member refid="classltr_1_1_ada_rank_1aad97b40a99fa1c70a8bffa66fa9a11fe" prot="protected" virt="virtual"><scope>ltr::AdaRank</scope><name>saveJSON</name></member>
      <member refid="classltr_1_1_ranker_1ad7e00be5a0f73626e8a2fec615e212df" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>score_training</name></member>
      <member refid="classltr_1_1_ranker_1a906c6adc01f500312bd4a65682fa7bf5" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>score_validation</name></member>
      <member refid="classltr_1_1_ranker_1a9a065766696a7e11451167fc736444a9" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>scorer</name></member>
      <member refid="classltr_1_1_ada_rank_1a958b9eaa0d4031dc1b8b3d51d2e1a4a9" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>selectWeakRanker</name></member>
      <member refid="classltr_1_1_ada_rank_1a64f9d600cc1a9efe69e6f78a7ba17306" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>setConsecutiveSelections</name></member>
      <member refid="classltr_1_1_ranker_1a9d702d1f3e458a71fd511e6594c671d0" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>setFeatures</name></member>
      <member refid="classltr_1_1_ada_rank_1a5dff0be5e4505ac0ac815ba698b39e32" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>setIter</name></member>
      <member refid="classltr_1_1_ranker_1a548f135d7bc17adcf98ce2e2181dc2cb" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>setScorer</name></member>
      <member refid="classltr_1_1_ada_rank_1ab8c0285d8b8b43c1749be4d7504bc572" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>setTolerance</name></member>
      <member refid="classltr_1_1_ranker_1abc1372c4de267531fef282da26300744" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>setTrainingSet</name></member>
      <member refid="classltr_1_1_ranker_1a1e1f6a229ac7771342218361b07b071a" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>setValidationSet</name></member>
      <member refid="classltr_1_1_ada_rank_1ae26827ed459254fcce4456803875033f" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>tolerance</name></member>
      <member refid="classltr_1_1_ranker_1a5e179960d11ea34cd9e4415661243102" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>training_samples</name></member>
      <member refid="classltr_1_1_ada_rank_1ab448c368def2d5d07d981a16a56c9bb6" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>used_features</name></member>
      <member refid="classltr_1_1_ranker_1a6773d8c83041f8c46d3b16020732d13e" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>validation_samples</name></member>
      <member refid="classltr_1_1_ranker_1ab5ad64e7d1ca0fc49e50d7c322135bbf" prot="protected" virt="non-virtual"><scope>ltr::AdaRank</scope><name>verbose</name></member>
      <member refid="classltr_1_1_ada_rank_1a376f76b6b374de8b674fe982172d3d18" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>~AdaRank</name></member>
      <member refid="classltr_1_1_ranker_1aa24c1f390119dcb7bf1520d99d09dd52" prot="public" virt="non-virtual"><scope>ltr::AdaRank</scope><name>~Ranker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
